name: Fetch Terraform Cloud Plan Output

on:
  pull_request:

jobs:
  fetch-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Get Latest Run ID
        id: get-run
        run: |
          RUN_ID=$(curl \
            --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
            "https://app.terraform.io/api/v2/workspaces/${{ vars.TF_WORKSPACE_ID }}/runs" \
            | jq -r '.data[0].id')
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Wait for Run to Complete
        run: |
          STATUS=""
          while [[ "$STATUS" != "planned" && "$STATUS" != "applied" && "$STATUS" != "errored" ]]
          do
            STATUS=$(curl -s \
              --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
              "https://app.terraform.io/api/v2/runs/${{ steps.get-run.outputs.run_id }}" \
              | jq -r '.data.attributes.status')

            echo "Current run status: $STATUS"

            if [[ "$STATUS" == "planned" || "$STATUS" == "applied" || "$STATUS" == "errored" ]]; then
              break
            fi

            echo "Waiting 15 seconds..."
            sleep 15
          done

      - name: Fetch Plan Output
        run: |
          PLAN_OUTPUT=$(curl -s \
            --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" \
            "https://app.terraform.io/api/v2/runs/${{ steps.get-run.outputs.run_id }}/plan/json-output")

          echo "$PLAN_OUTPUT" > plan.json
          echo "Fetched plan output."

      - name: Print Plan Summary
        run: |
          echo '## Terraform Plan Summary' >> $GITHUB_STEP_SUMMARY
          cat plan.json | jq '.resource_changes[] | {action: .change.actions, address: .address}' >> $GITHUB_STEP_SUMMARY

  tfscan:
      name: "Terraform Security Scan"
      runs-on: ubuntu-latest
      permissions:
        contents: read
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Run tfsec and save output
          uses: aquasecurity/tfsec-action@v1.0.0
          with:
            format: default
            additional_args: --no-color --out tfsec_output.txt
            soft_fail: true

        - name: Print tfsec output in summary
          if: always()
          run: |
            echo '## 🔐 tfsec Results' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat tfsec_output.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY